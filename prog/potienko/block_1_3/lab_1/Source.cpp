//Автор: Руслан Сакевич
//Умова задачі:
//Функцію f(x), визначену на інтервалі(a; b), задано аналітичною формулою та
//нескінченною сумою. Програма має отримати декілька дійсних значень аргументу x
//із інтервалу й для кожного з них вивести значення f(x), обчислені за формулою та за
//розкладом у суму степенів x, а також різницю між ними й кількість доданків у
//обчисленій скінченній сумі.
//Значення аргументу x задає користувач за допомогою клавіатури. У запрошенні до
//введення необхідно указати межі інтервалу(a; b), якому має належати аргумент.
//Програма має ігнорувати недопустимі значення аргументу, тобто повідомляти про
//недопустимість і запрошувати до повторного введення, поки користувач не введе
//допустиме значення.
//У відповідь на допустиме значення аргументу треба вивести два рядки. Перший
//містить заголовок, тобто позначення x, f_lib(x), f_sum(x), difference, N_adds.
//Другий — відповідні числа, розташовані під цими позначеннями та вирівняні з ними
//за правим краєм.
//Після виводу таблиці програма повинна запитати користувача чи хоче він
//продовжувати чи ні.
//Для виводу таблиці слід використати роботу №1 - 1 - 4, та оформити її як окремий
//модуль. Код, який відповідає за розв’язок лабораторної роботи 1 - 3 - 1 теж треба
//оформити окремим модулем.

#include <iostream>
#include <string>
#include "iolib.h"
#include "mathlib.h"
#include "table.h"

using namespace std;


double row[6];

int main(int argv, char** argc) {
	string userAnswer = "y";
	while (userAnswer == "y") {
		double x = -2.0;
		int m = 0;
		while (!F_check(x)) {
			cout << "Enter x in range (-1, 1): ";
			while (!TryToReadDouble(x)) {
				cout << "Error! Expected double" << endl;
				cout << "Enter x in range (-1, 1): ";
			}
			//Успішно зчитали дійсне число x
			if (!F_check(x)) cout << "Error! x should be in range (-1, 1)" << endl;
		}
		cout << "Enter natural m >> ";
		while (!TryToReadNatural(m)) {	
			cout << "Error! Expected natural number" << endl;
			cout << "Enter natural m: ";
		}
		//Успішно зчитали натуральне m
		memset(row, 0, sizeof(double) * 5);
		row[0] = x;
		row[1] = double(m);
		row[2] = F_lib(x, m);
		int n_adds = 0;
		row[3] = F_sum(x, m, n_adds);
		row[4] = fabs(row[2] - row[3]);
		row[5] = double(n_adds);
		DrawTable(row);
		cout << "Do you want to continue? (y\\n): ";
		cin >> userAnswer;
	}
	system("pause");
	return 0;
}
